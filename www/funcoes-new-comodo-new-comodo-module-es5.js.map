{"version":3,"sources":["webpack:///src/app/funcoes/new-comodo/new-comodo.page.html","webpack:///src/app/funcoes/new-comodo/new-comodo-routing.module.ts","webpack:///src/app/funcoes/new-comodo/new-comodo.module.ts","webpack:///src/app/funcoes/new-comodo/new-comodo.page.scss","webpack:///src/app/funcoes/new-comodo/new-comodo.page.ts"],"names":["routes","path","component","NewComodoPageRoutingModule","imports","forChild","exports","NewComodoPageModule","declarations","NewComodoPage","toastController","auth","alertCtrl","storage","formBuilder","apiService","router","isSubmitted","token","user","idUser","comodoCreate","group","nomeCom","required","getToken","console","log","getUser","getIdUser","userID","id","valid","value","comodo","nomeComodo","tempComodo","umiComodoF","ajustTempComodo","statusLuzComodo","statusTomadaComodo","statusJanelaComodo","statusPortaComodo","statusPresencaComodo","statusArCondiconado","isActive","isFavorite","issync","postComodoMongoDB","subscribe","response","navigateByUrl","err","erro","message","errors","error","messages","teste","e","push","m","create","header","buttons","alert","present","controls","selector","template"],"mappings":"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","file":"funcoes-new-comodo-new-comodo-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Cadastro do Comodo</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header color=\\\"danger\\\">\\n      <ion-card-title>Novo Comodo</ion-card-title>\\n      <ion-card-subtitle>Digite as informações do comodo</ion-card-subtitle>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form [formGroup]=\\\"comodoCreate\\\" (ngSubmit)=\\\"createCom()\\\" novalidate>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Nome do Comodo</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite o nome do Comodo\\\" required=\\\"true\\\" type=\\\"text\\\" formControlName=\\\"nomeCom\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.nomeCom.errors?.required\\\">\\n          *É nescessario o nome do comodo\\n        </ion-text>\\n        <ion-item>\\n          <ion-label>Esta Ativo?</ion-label>\\n          <ion-toggle color=\\\"danger\\\" checked disabled></ion-toggle>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>É Favorito?</ion-label>\\n          <ion-toggle color=\\\"danger\\\" disabled></ion-toggle>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Sera Sincronizado?</ion-label>\\n          <ion-toggle color=\\\"danger\\\" checked disabled></ion-toggle>\\n        </ion-item>\\n\\n        <ion-button expand=\\\"full\\\" type=\\\"submit\\\">Criar Comodo</ion-button>\\n\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewComodoPage } from './new-comodo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewComodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewComodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewComodoPageRoutingModule } from './new-comodo-routing.module';\n\nimport { NewComodoPage } from './new-comodo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewComodoPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [NewComodoPage]\n})\nexport class NewComodoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmNvZXMvbmV3LWNvbW9kby9uZXctY29tb2RvLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { SecureStoreService } from '../../services/storageL.service';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { ComodoService } from '../../services/comodo.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-comodo',\n  templateUrl: './new-comodo.page.html',\n  styleUrls: ['./new-comodo.page.scss'],\n})\nexport class NewComodoPage implements OnInit {\n\n  comodoCreate: FormGroup;\n  isSubmitted = false;\n  token = null;\n  userID: any;\n  user = null;\n  idUser = null;\n\n  constructor(public toastController: ToastController, private auth: AuthenticationService, private alertCtrl: AlertController, private storage: SecureStoreService, public formBuilder: FormBuilder, private apiService: ComodoService, private router: Router) {\n  }\n\n  async ngOnInit() {\n    this.comodoCreate = this.formBuilder.group({\n      nomeCom: ['', [Validators.required]],\n      // isActive: [true, [Validators.required]],\n      // issync: [true, [Validators.required]]\n    });\n    this.token = await this.storage.getToken();\n    // this.token = [{token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGEyYTRmYTFkODRmMTdhODkxZDVhOSIsImlhdCI6MTU5NTAyOTYwNSwiZXhwIjoxNjI2NjUyMDA1fQ.2kp-KLy6458Dq6zGgPsygBB_dyRws9BlqSNjbplyzOk'}];\n    console.log(this.token);\n    this.user = this.auth.getUser();\n    console.log(this.user);\n    this.idUser = await this.storage.getIdUser();\n    console.log(this.idUser);\n    this.userID = this.user ? this.user.id : this.idUser[0].idUser;\n    // this.userID = '5f0a2a4fa1d84f17a891d5a9';\n  }\n\n  async ionViewWillEnter() {\n    this.token = await this.storage.getToken();\n    // this.token = [{token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGEyYTRmYTFkODRmMTdhODkxZDVhOSIsImlhdCI6MTU5NTAyOTYwNSwiZXhwIjoxNjI2NjUyMDA1fQ.2kp-KLy6458Dq6zGgPsygBB_dyRws9BlqSNjbplyzOk'}];\n    console.log(this.token);\n    this.user = this.auth.getUser();\n    console.log(this.user);\n    this.idUser = await this.storage.getIdUser();\n    console.log(this.idUser);\n    this.userID = this.user ? this.user.id : this.idUser[0].idUser;\n    // this.userID = '5f0a2a4fa1d84f17a891d5a9';\n  }\n\n  createCom() {\n    this.isSubmitted = true;\n    if (!this.comodoCreate.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      console.log(this.comodoCreate.value);\n      let comodo = {\n        userID: this.userID,\n        nomeComodo: this.comodoCreate.value.nomeCom,\n        tempComodo: '',\n        umiComodoF: '',\n        ajustTempComodo: '',\n        statusLuzComodo: false,\n        statusTomadaComodo: false,\n        statusJanelaComodo: false,\n        statusPortaComodo: false,\n        statusPresencaComodo: false,\n        statusArCondiconado: false,\n        isActive: true,\n        isFavorite: false,\n        issync: true,\n      };\n\n      this.apiService.postComodoMongoDB(comodo, this.token[0].token).subscribe( async (response) => {\n        console.log(response);\n        this.router.navigateByUrl('/members');\n      }, async (err) => {\n        console.log(err);\n        let erro = err.message;\n        let errors = err.error.errors;\n        let messages = err.error.message;\n        let teste = [];\n        console.log(errors);\n        console.log(messages);\n  \n        if(errors){\n          for(let e of errors){\n            console.log(e.message);\n            teste.push(e.message);\n          }\n        }\n  \n        if(messages){\n          for(let m of messages){\n            console.log(m);\n            teste.push(m.message);\n          }\n        }\n  \n        teste.push(erro);\n        console.log(teste);\n        //let error = err.error ? err.error.message : err.message;\n        const alert = await this.alertCtrl.create({\n          header: 'Falha em criar o comodo',\n          message: 'Erro: ' + teste,\n          buttons: ['OK']\n        });\n        await alert.present();\n      });\n    }\n  }\n\n  get errorControl() {\n    return this.comodoCreate.controls;\n  }\n\n}\n"]}