{"version":3,"sources":["./src/app/funcoes/alter-passwd/alter-passwd.page.html","./src/app/funcoes/alter-passwd/alter-passwd-routing.module.ts","./src/app/funcoes/alter-passwd/alter-passwd.module.ts","./src/app/funcoes/alter-passwd/alter-passwd.page.scss","./src/app/funcoes/alter-passwd/alter-passwd.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,ugGAAw8F,E;;;;;;;;;;;;;;;;;;;ACA96F;AACc;AAED;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAMF,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;AAA/B,4BAA4B;IAJxC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACM;AACmB;AAErB;AAEgC;AAEvB;AAYtD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;AAAxB,qBAAqB;IAVjC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,yFAA4B;YAC5B,kEAAmB;SACpB;QACD,YAAY,EAAE,CAAC,kEAAe,CAAC;KAChC,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;ACpBlC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AACkB;AACjC;AAC2C;AACT;AACH;AACR;AACD;AAOzD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAO1B,YAAmB,eAAgC,EAAU,IAA2B,EAAU,SAA0B,EAAU,OAA2B,EAAU,UAAuB,EAAS,WAAwB,EAAS,cAA8B,EAAS,MAAc;QAA9Q,oBAAe,GAAf,eAAe,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAuB;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAoB;QAAU,eAAU,GAAV,UAAU,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAJjS,gBAAW,GAAG,KAAK,CAAC;QACpB,UAAK,GAAG,IAAI,CAAC;IAIb,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACvC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACxC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,wEAAwE,CAAC,CAAC,CAAC;gBACvL,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,wEAAwE,CAAC,CAAC,CAAC;aAC5L,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;YACnD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,mCAAmC;YACnC,0BAA0B;YAC1B,gDAAgD;YAChD,4BAA4B;YAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAC3C,yMAAyM;YACzM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;KAAA;IAED,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YACvD,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,SAAS,GAAG,gDAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;YAC9E,IAAI,WAAW,GAAG,gDAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC;YAClF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACvG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;YACnD,CAAC,EAAE,CAAO,GAAG,EAAE,EAAE,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;gBACvB,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC9B,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClC,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAEtB,IAAG,MAAM,EAAC;oBACR,KAAI,IAAI,CAAC,IAAI,MAAM,EAAC;wBAClB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBACvB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;qBACvB;iBACF;gBAED,IAAG,QAAQ,EAAC;oBACV,KAAI,IAAI,CAAC,IAAI,QAAQ,EAAC;wBACpB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACf,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;qBACvB;iBACF;gBAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACxC,MAAM,EAAE,iDAAiD;oBACzD,OAAO,EAAE,QAAQ,GAAG,KAAK;oBACzB,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YACxB,CAAC,EAAC,CAAC;SACJ;IACH,CAAC;IAED,iBAAiB,CAAC,SAAoB;QACpC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAClE,OAAO,QAAQ,KAAK,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC;IAC1E,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;CAEF;;YAnFqC,8DAAe;YAAgB,sFAAqB;YAAqB,8DAAe;YAAmB,6EAAkB;YAAsB,kEAAW;YAAsB,0DAAW;YAAyB,8DAAc;YAAiB,sDAAM;;AAPtR,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,8OAAuC;;KAExC,CAAC;GACW,eAAe,CA0F3B;AA1F2B","file":"funcoes-alter-passwd-alter-passwd-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Alteração de Senha</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header color=\\\"danger\\\">\\n      <ion-card-title>Alteração de Senha</ion-card-title>\\n    </ion-card-header>\\n      <form [formGroup]=\\\"alterSenha\\\" (ngSubmit)=\\\"alterPsswd()\\\" novalidate>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Senha Atual</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite a senha atual\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdAtual\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.passwdAtual.errors?.required\\\">\\n          *Digite a senha atual\\n        </ion-text>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Nova Senha</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite a nova senha\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdNew\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.passwdNew.errors?.required\\\">\\n          *É nescessario a nova senha\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && (errorControl.passwdNew.errors?.pattern || errorControl.passwdNew.errors?.minLength || errorControl.passwdNew.errors?.maxLength)\\\">\\n          *É nescessario que a senha tenha entre 6 a 30 caracteres, pelo menos uma letra maiuscula, uma letra minuscula, um numero e um caractere especial\\n        </ion-text>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Confirme a Nova Senha</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Confirme a nova senha\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdNewConf\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && !alterSenha.get('passwdNewConf').errors && alterSenha.hasError('passwordNotMatch') && (alterSenha.get('passwdNewConf').dirty || alterSenha.get('passwdNewConf').touched)\\\">\\n          *A confirmação tem que ser igual a senha\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.passwdNewConf.errors?.required\\\">\\n          *Confirme a senha\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && (errorControl.passwdNewConf.errors?.pattern || errorControl.passwdNewConf.errors?.minLength || errorControl.passwdNewConf.errors?.maxLength)\\\">\\n          *É nescessario que a senha tenha entre 6 a 30 caracteres, pelo menos uma letra maiuscula, uma letra minuscula, um numero e um caractere especial\\n        </ion-text>\\n\\n        <ion-button expand=\\\"full\\\" type=\\\"submit\\\">Alterar Senha</ion-button>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"backToConfig()\\\">VOLTAR</ion-button>\\n      </form>\\n    <ion-card-content>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AlterPasswdPage } from './alter-passwd.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AlterPasswdPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AlterPasswdPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AlterPasswdPageRoutingModule } from './alter-passwd-routing.module';\n\nimport { AlterPasswdPage } from './alter-passwd.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AlterPasswdPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [AlterPasswdPage]\n})\nexport class AlterPasswdPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmNvZXMvYWx0ZXItcGFzc3dkL2FsdGVyLXBhc3N3ZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { sha512 } from 'js-sha512';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { SecureStoreService } from '../../services/storageL.service';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-alter-passwd',\n  templateUrl: './alter-passwd.page.html',\n  styleUrls: ['./alter-passwd.page.scss'],\n})\nexport class AlterPasswdPage implements OnInit {\n\n  alterSenha: FormGroup;\n  isSubmitted = false;\n  token = null;\n  id: any;\n\n  constructor(public toastController: ToastController, private auth: AuthenticationService, private alertCtrl: AlertController, private storage: SecureStoreService, private apiService: UserService, public formBuilder: FormBuilder, public activatedRoute: ActivatedRoute, public router: Router) {\n  }\n\n  async ngOnInit() {\n    this.alterSenha = this.formBuilder.group({\n      passwdAtual: ['', [Validators.required]],\n      passwdNew: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/)]],\n      passwdNewConf: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/)]],\n    }, {validator: this.matchingPasswords.bind(this)});\n    this.id = this.activatedRoute.snapshot.params.id;\n    console.log(this.id);\n    // this.user = this.auth.getUser();\n    // console.log(this.user);\n    // this.idUser = await this.storage.getIdUser();\n    // console.log(this.idUser);\n    this.token = await this.storage.getToken();\n    // this.token = [{token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGEyYTRmYTFkODRmMTdhODkxZDVhOSIsImlhdCI6MTU5NTAyOTYwNSwiZXhwIjoxNjI2NjUyMDA1fQ.2kp-KLy6458Dq6zGgPsygBB_dyRws9BlqSNjbplyzOk'}];\n    console.log(this.token);\n  }\n\n  alterPsswd() {\n    this.isSubmitted = true;\n    if (!this.alterSenha.valid) {\n      console.log('Please provide all the required values!');\n      return false;\n    } else {\n      console.log(this.alterSenha.value);\n      let passwdNew = sha512.create().update(this.alterSenha.value.passwdNew).hex();\n      let passwdAtual = sha512.create().update(this.alterSenha.value.passwdAtual).hex();\n      console.log(passwdNew);\n      console.log(passwdAtual);\n      this.apiService.alterPasswd(this.id, passwdNew, passwdAtual, this.token[0].token).subscribe((response) => {\n        console.log(response);\n        this.router.navigateByUrl('/members/smh/config');\n      }, async (err) => {\n        console.log(err);\n        let erro = err.message;\n        let errors = err.error.errors;\n        let messages = err.error.messages;\n        let teste = [];\n        console.log(errors);\n        console.log(messages);\n  \n        if(errors){\n          for(let e of errors){\n            console.log(e.message);\n            teste.push(e.message);\n          }\n        }\n  \n        if(messages){\n          for(let m of messages){\n            console.log(m);\n            teste.push(m.message);\n          }\n        }\n  \n        teste.push(erro);\n        console.log(teste);\n        const alert = await this.alertCtrl.create({\n          header: 'Falha em atualizar a senha do usuario o usuario',\n          message: 'Erro: ' + teste,\n          buttons: ['OK']\n        });\n        await alert.present();\n      });\n    }\n  }\n\n  matchingPasswords(formGroup: FormGroup) {\n    const { value: password } = formGroup.get('passwdNew');\n    const { value: confirmPassword } = formGroup.get('passwdNewConf');\n    return password === confirmPassword ? null : { passwordNotMatch: true };\n  }\n\n  backToConfig(){\n    this.router.navigateByUrl('/members/smh/config');\n  }\n\n  get errorControl() {\n    return this.alterSenha.controls;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}