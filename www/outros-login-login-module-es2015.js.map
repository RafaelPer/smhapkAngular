{"version":3,"sources":["./src/app/outros/login/login.page.html","./src/app/outros/login/login-routing.module.ts","./src/app/outros/login/login.module.ts","./src/app/outros/login/login.page.scss","./src/app/outros/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,oeAAqa,uyCAAuyC,E;;;;;;;;;;;;;;;;;;;ACAlrD;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAMF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACmB;AAErB;AAEmB;AAEvB;AAYzC,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4EAAsB;YACtB,kEAAmB;SACpB;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;ACpB5B;AAAe,6GAA8C,+IAA+I,E;;;;;;;;;;;;;;;;;;;;;;;;ACA1J;AACkB;AACjC;AAC0C;AACpC;AACQ;AAC4B;AAO7E,IAAa,SAAS,GAAtB,MAAa,SAAS;IAMpB,YAAmB,WAAwB,EAAU,IAA2B,EAAU,MAAc,EAAU,SAA0B,EAAU,OAA2B;QAA9J,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAoB;QAHjL,gBAAW,GAAG,KAAK,CAAC;IAGiK,CAAC;IAEtL,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YACvD,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,IAAI,GAAG,gDAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC;YAC1E,IAAI,CAAC,KAAK,GAAG;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa;gBAC5C,KAAK,EAAE,IAAI;aACZ,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAM,GAAG,EAAC,EAAE,CAAC;gBAC5E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,GAAG,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjC,IAAI,GAAG,GAAW;wBAChB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;qBACtB;oBACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;iBACvC;qBAAM;oBACL,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBACxC,MAAM,EAAE,gBAAgB;wBACxB,OAAO,EAAE,gBAAgB;wBACzB,OAAO,EAAE,CAAC,IAAI,CAAC;qBAChB,CAAC,CAAC;oBACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;iBACvB;YACH,CAAC,GAAE,CAAM,GAAG,EAAC,EAAE,CAAC;gBACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;gBACxD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACxC,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,kBAAkB,GAAG,KAAK;oBACnC,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YACxB,CAAC,EAAC,CAAC;YAEH,wBAAwB;SACzB;IACH,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;CAEF;;YA3DiC,0DAAW;YAAgB,sFAAqB;YAAkB,sDAAM;YAAqB,8DAAe;YAAmB,6EAAkB;;AANtK,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,wNAAgC;;KAEjC,CAAC;GACW,SAAS,CAiErB;AAjEqB","file":"outros-login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"tertiary\\\">\\n  <form  [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\" novalidate>\\n    <ion-grid>\\n      <ion-row color=\\\"tertiary\\\" justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\" style=\\\"margin: 0px auto 0px auto !important;\\\">\\n          <div padding>\\n    \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Username</ion-label>\\n              <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite o username do usuario\\\" required=\\\"true\\\" type=\\\"text\\\" formControlName=\\\"usernameLogin\\\"></ion-input>\\n            </ion-item>\\n            <ion-text color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.usernameLogin.errors?.required\\\">\\n              *É nescessario o username\\n            </ion-text>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Senha</ion-label>\\n              <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite a senha\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdLogin\\\"></ion-input>\\n            </ion-item>\\n            <ion-text color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.passwdLogin.errors?.required\\\">\\n              *É nescessario a senha\\n            </ion-text>\\n    \\n          </div>\\n          <div padding>\\n            <ion-button  size=\\\"large\\\" type=\\\"submit\\\" expand=\\\"block\\\">Entrar</ion-button>\\n            <ion-button  size=\\\"large\\\" expand=\\\"block\\\" routerLink='/'>Voltar</ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dHJvcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { sha512 } from 'js-sha512';\nimport { AuthenticationService } from '../../services/authentication.service'\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { SecureStoreService, IdUser } from '../../services/storageL.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginForm: FormGroup;\n  isSubmitted = false;\n  logIn: any;\n\n  constructor(public formBuilder: FormBuilder, private auth: AuthenticationService, private router: Router, private alertCtrl: AlertController, private storage: SecureStoreService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      usernameLogin: ['', [Validators.required]],\n      passwdLogin: ['', [Validators.required]]\n    });\n  }\n\n  login(){\n    this.isSubmitted = true;\n    if (!this.loginForm.valid) {\n      console.log('Please provide all the required values!');\n      return false;\n    } else {\n      console.log(this.loginForm.value);\n      let hash = sha512.create().update(this.loginForm.value.passwdLogin).hex();\n      this.logIn = {\n        username: this.loginForm.value.usernameLogin,\n        senha: hash\n      };\n\n      console.log(this.logIn);\n      this.auth.login(this.logIn.username, this.logIn.senha).subscribe(async res => {\n        console.log(res);\n        if (res) {\n          console.log(res[0].token.idUser);\n          let idu: IdUser = {\n            idUser: res[0].idUser\n          }\n          this.storage.addOneIdUser(idu);\n          this.router.navigateByUrl('/members');\n        } else {\n          const alert = await this.alertCtrl.create({\n            header: 'Falha no Login',\n            message: 'Falha no Login',\n            buttons: ['OK']\n          });\n          await alert.present();\n        }\n      }, async err => {\n        console.log(err);\n        let error = err.error ? err.error.message : err.message;\n        const alert = await this.alertCtrl.create({\n          header: 'Login Failed',\n          message: 'Falha no Login: ' + error,\n          buttons: ['OK']\n        });\n        await alert.present();\n      });\n\n      // console.log('teste');\n    }\n  }\n\n  get errorControl() {\n    return this.loginForm.controls;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}