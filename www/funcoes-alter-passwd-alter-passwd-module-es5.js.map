{"version":3,"sources":["webpack:///src/app/funcoes/alter-passwd/alter-passwd.page.html","webpack:///src/app/funcoes/alter-passwd/alter-passwd-routing.module.ts","webpack:///src/app/funcoes/alter-passwd/alter-passwd.module.ts","webpack:///src/app/funcoes/alter-passwd/alter-passwd.page.scss","webpack:///src/app/funcoes/alter-passwd/alter-passwd.page.ts"],"names":["routes","path","component","AlterPasswdPageRoutingModule","imports","forChild","exports","AlterPasswdPageModule","declarations","AlterPasswdPage","toastController","auth","alertCtrl","storage","apiService","formBuilder","activatedRoute","router","isSubmitted","token","alterSenha","group","passwdAtual","required","passwdNew","minLength","maxLength","pattern","passwdNewConf","validator","matchingPasswords","bind","id","snapshot","params","console","log","getToken","valid","value","create","update","hex","alterPasswd","subscribe","response","navigateByUrl","err","erro","message","errors","error","messages","teste","e","push","m","header","buttons","alert","present","formGroup","get","password","confirmPassword","passwordNotMatch","controls","selector","template"],"mappings":"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","file":"funcoes-alter-passwd-alter-passwd-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Alteração de Senha</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header color=\\\"danger\\\">\\n      <ion-card-title>Alteração de Senha</ion-card-title>\\n    </ion-card-header>\\n      <form [formGroup]=\\\"alterSenha\\\" (ngSubmit)=\\\"alterPsswd()\\\" novalidate>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Senha Atual</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite a senha atual\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdAtual\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.passwdAtual.errors?.required\\\">\\n          *Digite a senha atual\\n        </ion-text>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Nova Senha</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite a nova senha\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdNew\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.passwdNew.errors?.required\\\">\\n          *É nescessario a nova senha\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && (errorControl.passwdNew.errors?.pattern || errorControl.passwdNew.errors?.minLength || errorControl.passwdNew.errors?.maxLength)\\\">\\n          *É nescessario que a senha tenha entre 6 a 30 caracteres, pelo menos uma letra maiuscula, uma letra minuscula, um numero e um caractere especial\\n        </ion-text>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Confirme a Nova Senha</ion-label>\\n          <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Confirme a nova senha\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdNewConf\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && !alterSenha.get('passwdNewConf').errors && alterSenha.hasError('passwordNotMatch') && (alterSenha.get('passwdNewConf').dirty || alterSenha.get('passwdNewConf').touched)\\\">\\n          *A confirmação tem que ser igual a senha\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && errorControl.passwdNewConf.errors?.required\\\">\\n          *Confirme a senha\\n        </ion-text>\\n        <ion-text color=\\\"danger\\\" *ngIf=\\\"isSubmitted && (errorControl.passwdNewConf.errors?.pattern || errorControl.passwdNewConf.errors?.minLength || errorControl.passwdNewConf.errors?.maxLength)\\\">\\n          *É nescessario que a senha tenha entre 6 a 30 caracteres, pelo menos uma letra maiuscula, uma letra minuscula, um numero e um caractere especial\\n        </ion-text>\\n\\n        <ion-button expand=\\\"full\\\" type=\\\"submit\\\">Alterar Senha</ion-button>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"backToConfig()\\\">VOLTAR</ion-button>\\n      </form>\\n    <ion-card-content>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AlterPasswdPage } from './alter-passwd.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AlterPasswdPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AlterPasswdPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AlterPasswdPageRoutingModule } from './alter-passwd-routing.module';\n\nimport { AlterPasswdPage } from './alter-passwd.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AlterPasswdPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [AlterPasswdPage]\n})\nexport class AlterPasswdPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmNvZXMvYWx0ZXItcGFzc3dkL2FsdGVyLXBhc3N3ZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { sha512 } from 'js-sha512';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { SecureStoreService } from '../../services/storageL.service';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-alter-passwd',\n  templateUrl: './alter-passwd.page.html',\n  styleUrls: ['./alter-passwd.page.scss'],\n})\nexport class AlterPasswdPage implements OnInit {\n\n  alterSenha: FormGroup;\n  isSubmitted = false;\n  token = null;\n  id: any;\n\n  constructor(public toastController: ToastController, private auth: AuthenticationService, private alertCtrl: AlertController, private storage: SecureStoreService, private apiService: UserService, public formBuilder: FormBuilder, public activatedRoute: ActivatedRoute, public router: Router) {\n  }\n\n  async ngOnInit() {\n    this.alterSenha = this.formBuilder.group({\n      passwdAtual: ['', [Validators.required]],\n      passwdNew: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/)]],\n      passwdNewConf: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/)]],\n    }, {validator: this.matchingPasswords.bind(this)});\n    this.id = this.activatedRoute.snapshot.params.id;\n    console.log(this.id);\n    // this.user = this.auth.getUser();\n    // console.log(this.user);\n    // this.idUser = await this.storage.getIdUser();\n    // console.log(this.idUser);\n    this.token = await this.storage.getToken();\n    // this.token = [{token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGEyYTRmYTFkODRmMTdhODkxZDVhOSIsImlhdCI6MTU5NTAyOTYwNSwiZXhwIjoxNjI2NjUyMDA1fQ.2kp-KLy6458Dq6zGgPsygBB_dyRws9BlqSNjbplyzOk'}];\n    console.log(this.token);\n  }\n\n  alterPsswd() {\n    this.isSubmitted = true;\n    if (!this.alterSenha.valid) {\n      console.log('Please provide all the required values!');\n      return false;\n    } else {\n      console.log(this.alterSenha.value);\n      let passwdNew = sha512.create().update(this.alterSenha.value.passwdNew).hex();\n      let passwdAtual = sha512.create().update(this.alterSenha.value.passwdAtual).hex();\n      console.log(passwdNew);\n      console.log(passwdAtual);\n      this.apiService.alterPasswd(this.id, passwdNew, passwdAtual, this.token[0].token).subscribe((response) => {\n        console.log(response);\n        this.router.navigateByUrl('/members/smh/config');\n      }, async (err) => {\n        console.log(err);\n        let erro = err.message;\n        let errors = err.error.errors;\n        let messages = err.error.messages;\n        let teste = [];\n        console.log(errors);\n        console.log(messages);\n  \n        if(errors){\n          for(let e of errors){\n            console.log(e.message);\n            teste.push(e.message);\n          }\n        }\n  \n        if(messages){\n          for(let m of messages){\n            console.log(m);\n            teste.push(m.message);\n          }\n        }\n  \n        teste.push(erro);\n        console.log(teste);\n        const alert = await this.alertCtrl.create({\n          header: 'Falha em atualizar a senha do usuario o usuario',\n          message: 'Erro: ' + teste,\n          buttons: ['OK']\n        });\n        await alert.present();\n      });\n    }\n  }\n\n  matchingPasswords(formGroup: FormGroup) {\n    const { value: password } = formGroup.get('passwdNew');\n    const { value: confirmPassword } = formGroup.get('passwdNewConf');\n    return password === confirmPassword ? null : { passwordNotMatch: true };\n  }\n\n  backToConfig(){\n    this.router.navigateByUrl('/members/smh/config');\n  }\n\n  get errorControl() {\n    return this.alterSenha.controls;\n  }\n\n}\n"]}