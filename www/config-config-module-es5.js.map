{"version":3,"sources":["webpack:///src/app/config/config.page.html","webpack:///src/app/config/config-routing.module.ts","webpack:///src/app/config/config.module.ts","webpack:///src/app/config/config.page.scss","webpack:///src/app/config/config.page.ts"],"names":["routes","path","component","ConfigPageRoutingModule","imports","forChild","exports","ConfigPageModule","declarations","ConfigPage","toastController","auth","alertCtrl","storage","apiService","router","token","user","idUser","us","getToken","console","log","getUser","getIdUser","userID","id","idMongo","username","updateByIDMUSQLite","subscribe","response","err","error","message","create","header","buttons","alert","present","createUserSQLite","existTble","messages","r","indexOf","alterUsSQLite","erro","errors","teste","e","push","m","usrID","getByIDMongoDB","navigateByUrl","usrname","u","IDMongodbUser","nome","sobrenome","email","senha","celular","isActive","dispositivo","issync","date","insertOrUpdateUsSQLite","selector","template"],"mappings":"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","file":"config-config-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      CONFIGURAÇÕES\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Configurações da Conta</ion-card-title>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      <form action=\\\"\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Username</ion-label>\\n          <ion-input disabled value=\\\"{{us.username}}\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Nome</ion-label>\\n          <ion-input disabled  value=\\\"{{us.nome}}\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Sobrenome</ion-label>\\n          <ion-input disabled  value=\\\"{{us.sobrenome}}\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Email</ion-label>\\n          <ion-input disabled  value=\\\"{{us.email}}\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Celular</ion-label>\\n          <ion-input disabled  value=\\\"{{us.celular}}\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Ativo?</ion-label>\\n          <ion-toggle color=\\\"danger\\\" disabled [checked]=\\\"us.isActive\\\"></ion-toggle>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"tertiary\\\">Sincronizar?</ion-label>\\n          <ion-toggle color=\\\"danger\\\" disabled [checked]=\\\"us.issync\\\"></ion-toggle>\\n        </ion-item>\\n      </form>\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"routerForAlterPasswd()\\\">ALTERAR SENHA</ion-button>\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"routerForAlterInfoAccount()\\\">ALTERAR INFORMAÇÕES</ion-button>\\n      <ion-button expand=\\\"full\\\" color=\\\"dark\\\" (click)=\\\"sincUser(us.username)\\\">Sincronizar Usuario</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConfigPage } from './config.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfigPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ConfigPage } from './config.page';\n//import { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { ConfigPageRoutingModule } from './config-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    //ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: ConfigPage }]),\n    ConfigPageRoutingModule,\n  ],\n  declarations: [ConfigPage]\n})\nexport class ConfigPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZy9jb25maWcucGFnZS5zY3NzIn0= */\";","import { Component } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { SecureStoreService } from '../services/storageL.service';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-config',\n  templateUrl: 'config.page.html',\n  styleUrls: ['config.page.scss']\n})\nexport class ConfigPage {\n\n  token = null;\n  userID: any;\n  user = null;\n  idUser = null;\n  us: any;\n\n  constructor(public toastController: ToastController, private auth: AuthenticationService, private alertCtrl: AlertController, private storage: SecureStoreService, private apiService: UserService, private router: Router) {\n    this.us = {};\n  }\n\n  async ngOnInit() {\n    this.token = await this.storage.getToken();\n    // this.token = [{token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGEyYTRmYTFkODRmMTdhODkxZDVhOSIsImlhdCI6MTU5NTAyOTYwNSwiZXhwIjoxNjI2NjUyMDA1fQ.2kp-KLy6458Dq6zGgPsygBB_dyRws9BlqSNjbplyzOk'}];\n    console.log(this.token);\n    this.user = this.auth.getUser();\n    console.log(this.user);\n    this.idUser = await this.storage.getIdUser();\n    console.log(this.idUser);\n    this.userID = this.user ? this.user.id : this.idUser[0].idUser;\n    // this.userID = '5f0a2a4fa1d84f17a891d5a9';\n    this.getUser(this.userID, this.token[0].token);\n  }\n\n  async ionViewWillEnter() {\n    this.token = await this.storage.getToken();\n    // this.token = [{token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmMGEyYTRmYTFkODRmMTdhODkxZDVhOSIsImlhdCI6MTU5NTAyOTYwNSwiZXhwIjoxNjI2NjUyMDA1fQ.2kp-KLy6458Dq6zGgPsygBB_dyRws9BlqSNjbplyzOk'}];\n    console.log(this.token);\n    this.user = this.auth.getUser();\n    console.log(this.user);\n    this.idUser = await this.storage.getIdUser();\n    console.log(this.idUser);\n    this.userID = this.user ? this.user.id : this.idUser[0].idUser;\n    // this.userID = '5f0a2a4fa1d84f17a891d5a9';\n    this.getUser(this.userID, this.token[0].token);\n  }\n\n  alterUsSQLite(idMongo, user, token, username){\n    this.apiService.updateByIDMUSQLite(idMongo, user, token).subscribe((response) => {\n      console.log(response);\n    }, async (err) => {\n      console.log(err);\n      let error = err.error ? err.error.message : err.message;\n      const alert = await this.alertCtrl.create({\n        header: 'Falha em atualizar o usuario ' + username + ' com o id: ' + idMongo + ' na base local',\n        message: 'Erro: ' + error,\n        buttons: ['OK']\n      });\n      await alert.present();\n    });\n  }\n\n  insertOrUpdateUsSQLite(idUser, user, token, username){\n    this.apiService.createUserSQLite(user).subscribe( async (response) => {\n      console.log(response);\n      let existTble = false;\n      for(let r of response.messages){\n        console.log(r);\n        // if(r.message.indexOf('Coluna ja Existe na base do servidor, Sincronizado com sucesso')){\n        if(r.message.indexOf('Existe')){\n          existTble = true;\n          break;\n        }\n      }\n      console.log(existTble);\n      if(existTble){\n        this.alterUsSQLite(idUser, user, token, username);\n      }\n    }, async (err) => {\n      console.log(err);\n      let erro = err.message;\n      let errors = err.error.errors;\n      let messages = err.error.messages;\n      let teste = [];\n      console.log(errors);\n      console.log(messages);\n\n      if(errors){\n        for(let e of errors){\n          console.log(e.message);\n          teste.push(e.message);\n        }\n      }\n\n      if(messages){\n        for(let m of messages){\n          console.log(m);\n          teste.push(m.message);\n        }\n      }\n\n      teste.push(erro);\n      console.log(teste);\n      const alert = await this.alertCtrl.create({\n        header: 'Falha em sincronizar o usuario ' + username + ' com o id: ' + idUser + ' na base local',\n        message: 'Erro: ' + teste,\n        buttons: ['OK']\n      });\n      await alert.present();\n    });\n  }\n\n  getUser(usrID, token){\n    this.apiService.getByIDMongoDB(usrID, token).subscribe( async (response) => {\n      console.log(response);\n      this.us = response;\n    }, async (err) => {\n      console.log(err);\n      let error = err.error ? err.error.message : err.message;\n      const alert = await this.alertCtrl.create({\n        header: 'Falha em buscar as informações do usuario',\n        message: 'Erro: ' + error,\n        buttons: ['OK']\n      });\n      await alert.present();\n    });\n  }\n\n  routerForAlterPasswd(){\n    this.router.navigateByUrl('/members/smh/alter-passwd/' + this.us.username);\n  }\n\n  routerForAlterInfoAccount(){\n    this.router.navigateByUrl('/members/smh/alter-info-conta/' + this.userID);\n  }\n\n  sincUser(usrname){\n    let u = {\n      IDMongodbUser: this.userID,\n      username: usrname,\n      nome: this.us.nome,\n      sobrenome: this.us.sobrenome,\n      email: this.us.email,\n      senha: this.us.senha,\n      celular: this.us.celular,\n      isActive: this.us.isActive,\n      dispositivo: this.us.dispositivo,\n      issync: this.us.issync,\n      date: this.us.date\n    };\n    this.insertOrUpdateUsSQLite(this.userID, u, this.token[0].token, usrname);\n  }\n}\n"]}