{"version":3,"sources":["webpack:///src/app/outros/login/login.page.html","webpack:///src/app/outros/login/login-routing.module.ts","webpack:///src/app/outros/login/login.module.ts","webpack:///src/app/outros/login/login.page.scss","webpack:///src/app/outros/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","formBuilder","auth","router","alertCtrl","storage","isSubmitted","loginForm","group","usernameLogin","required","passwdLogin","valid","console","log","value","hash","create","update","hex","logIn","username","senha","login","subscribe","res","token","idUser","idu","addOneIdUser","navigateByUrl","header","message","buttons","alert","present","err","error","controls","selector","template"],"mappings":"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","file":"outros-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"tertiary\\\">\\n  <form  [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\" novalidate>\\n    <ion-grid>\\n      <ion-row color=\\\"tertiary\\\" justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\" style=\\\"margin: 0px auto 0px auto !important;\\\">\\n          <div padding>\\n    \\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Username</ion-label>\\n              <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite o username do usuario\\\" required=\\\"true\\\" type=\\\"text\\\" formControlName=\\\"usernameLogin\\\"></ion-input>\\n            </ion-item>\\n            <ion-text color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.usernameLogin.errors?.required\\\">\\n              *É nescessario o username\\n            </ion-text>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Senha</ion-label>\\n              <ion-input  clearInput=\\\"true\\\" inputmode=\\\"text\\\" placeholder=\\\"Digite a senha\\\" required=\\\"true\\\" type=\\\"password\\\" formControlName=\\\"passwdLogin\\\"></ion-input>\\n            </ion-item>\\n            <ion-text color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.passwdLogin.errors?.required\\\">\\n              *É nescessario a senha\\n            </ion-text>\\n    \\n          </div>\\n          <div padding>\\n            <ion-button  size=\\\"large\\\" type=\\\"submit\\\" expand=\\\"block\\\">Entrar</ion-button>\\n            <ion-button  size=\\\"large\\\" expand=\\\"block\\\" routerLink='/'>Voltar</ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dHJvcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { sha512 } from 'js-sha512';\nimport { AuthenticationService } from '../../services/authentication.service'\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { SecureStoreService, IdUser } from '../../services/storageL.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginForm: FormGroup;\n  isSubmitted = false;\n  logIn: any;\n\n  constructor(public formBuilder: FormBuilder, private auth: AuthenticationService, private router: Router, private alertCtrl: AlertController, private storage: SecureStoreService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      usernameLogin: ['', [Validators.required]],\n      passwdLogin: ['', [Validators.required]]\n    });\n  }\n\n  login(){\n    this.isSubmitted = true;\n    if (!this.loginForm.valid) {\n      console.log('Please provide all the required values!');\n      return false;\n    } else {\n      console.log(this.loginForm.value);\n      let hash = sha512.create().update(this.loginForm.value.passwdLogin).hex();\n      this.logIn = {\n        username: this.loginForm.value.usernameLogin,\n        senha: hash\n      };\n\n      console.log(this.logIn);\n      this.auth.login(this.logIn.username, this.logIn.senha).subscribe(async res => {\n        console.log(res);\n        if (res) {\n          console.log(res[0].token.idUser);\n          let idu: IdUser = {\n            idUser: res[0].idUser\n          }\n          this.storage.addOneIdUser(idu);\n          this.router.navigateByUrl('/members');\n        } else {\n          const alert = await this.alertCtrl.create({\n            header: 'Falha no Login',\n            message: 'Falha no Login',\n            buttons: ['OK']\n          });\n          await alert.present();\n        }\n      }, async err => {\n        console.log(err);\n        let error = err.error ? err.error.message : err.message;\n        const alert = await this.alertCtrl.create({\n          header: 'Login Failed',\n          message: 'Falha no Login: ' + error,\n          buttons: ['OK']\n        });\n        await alert.present();\n      });\n\n      // console.log('teste');\n    }\n  }\n\n  get errorControl() {\n    return this.loginForm.controls;\n  }\n\n}\n"]}